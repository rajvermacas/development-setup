schemaVersion: 2.2.0
metadata:
  name: python-dev-environment
  displayName: Python Development Environment
  description: Complete Python development environment with AI CLI tools and utilities
  language: python
  projectType: python
  version: 1.0.0

components:
  - name: python-dev
    container:
      image: python:3.12-bookworm
      memoryRequest: 2Gi
      memoryLimit: 12Gi
      cpuRequest: 1000m
      cpuLimit: 4000m
      mountSources: true
      sourceMapping: /projects
      env:
        - name: SHELL
          value: /bin/bash
      volumeMounts:
        - name: venv
          path: /venv
        - name: projects
          path: /home/user/projects
      endpoints:
        - name: http-python
          targetPort: 8000
          exposure: public
        - name: http-node
          targetPort: 3000
          exposure: public

volumes:
  - name: venv
    size: 10Gi
  - name: projects
    volume:
      hostPath:
        path: C:\Projects

commands:
  - id: install-base-packages
    exec:
      component: python-dev
      commandLine: |
        apt-get update && apt-get install -y \
          curl \
          wget \
          git \
          vim \
          nano \
          build-essential \
          software-properties-common \
          ca-certificates \
          gnupg \
          lsb-release \
          sudo \
          && rm -rf /var/lib/apt/lists/*
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: install-nodejs
    exec:
      component: python-dev
      commandLine: |
        curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
        apt-get install -y nodejs && \
        npm install -g npm@latest
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: install-utility-tools
    exec:
      component: python-dev
      commandLine: |
        apt-get update && apt-get install -y \
          lsof \
          net-tools \
          htop \
          iotop \
          iftop \
          ncdu \
          tree \
          jq \
          ripgrep \
          fd-find \
          bat \
          exa \
          fzf \
          tmux \
          screen \
          strace \
          tcpdump \
          nmap \
          traceroute \
          mtr \
          dnsutils \
          iputils-ping \
          netcat-openbsd \
          socat \
          telnet \
          openssh-client \
          rsync \
          zip \
          unzip \
          p7zip-full \
          tar \
          gzip \
          bzip2 \
          xz-utils \
          file \
          procps \
          psmisc \
          sysstat \
          dstat \
          && rm -rf /var/lib/apt/lists/*
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: install-ai-cli-tools
    exec:
      component: python-dev
      commandLine: |
        npm install -g @anthropic-ai/claude-code && \
        npm install -g @google/gemini-cli
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: clone-development-setup
    exec:
      component: python-dev
      commandLine: |
        cd /tmp && \
        git clone https://github.com/rajvermacas/development-setup.git && \
        cd development-setup
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: setup-claude-files
    exec:
      component: python-dev
      commandLine: |
        # Create directories
        mkdir -p ~/.claude/agents ~/.claude/commands ~/.claude/output-styles ~/projects/claude-code-templates ~/.gemini/commands
        
        # Navigate to the cloned repo
        cd /tmp/development-setup
        
        # Copy agents
        cp agents/impact-analyzer.md ~/.claude/agents/ 2>/dev/null || echo "File not found: agents/impact-analyzer.md"
        cp agents/library-api-discover.md ~/.claude/agents/ 2>/dev/null || echo "File not found: agents/library-api-discover.md"
        cp agents/project-setup-architect.md ~/.claude/agents/ 2>/dev/null || echo "File not found: agents/project-setup-architect.md"
        cp agents/tech-intelligence-researcher.md ~/.claude/agents/ 2>/dev/null || echo "File not found: agents/tech-intelligence-researcher.md"
        cp agents/feature-completion-reviewer ~/.claude/agents/ 2>/dev/null || echo "File not found: agents/feature-completion-reviewer"
        
        # Copy commands
        cp commands/brainstorm-dev.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/brainstorm-dev.md"
        cp commands/continue-snapshot.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/continue-snapshot.md"
        cp commands/create-arch-md.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/create-arch-md.md"
        cp commands/debug.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/debug.md"
        cp commands/persist-session.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/persist-session.md"
        cp commands/rearticulate.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/rearticulate.md"
        cp commands/snapshot.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/snapshot.md"
        cp commands/test-driven-development.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/test-driven-development.md"
        cp commands/ui-style-guide.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/ui-style-guide.md"
        cp commands/search.md ~/.claude/commands/ 2>/dev/null || echo "File not found: commands/search.md"
        
        # Copy output-styles
        cp output-styles/direct-dev.md ~/.claude/output-styles/ 2>/dev/null || echo "File not found: output-styles/direct-dev.md"
        
        # Copy CLAUDE.md
        cp CLAUDE.md ~/.claude/ 2>/dev/null || echo "File not found: CLAUDE.md"
        
        # Copy session scratchpad template
        cp claude-code-templates/session-scratchpad-template.md ~/projects/claude-code-templates/ 2>/dev/null || echo "File not found: claude-code-templates/session-scratchpad-template.md"
        
        # Copy VSCode keybindings (Note: /User/keybindings.json path might need adjustment based on the container)
        mkdir -p /User
        cp .vscode/keybindings.json /User/keybindings.json 2>/dev/null || echo "File not found: .vscode/keybindings.json"
        
        # Copy Gemini commands
        cp .gemini/commands/git-commit.toml ~/.gemini/commands/ 2>/dev/null || echo "File not found: .gemini/commands/git-commit.toml"
        
        echo "Setup completed. Files that existed have been copied."
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: install-python-tools
    exec:
      component: python-dev
      commandLine: |
        pip install --upgrade pip && \
        pip install \
          ipython \
          jupyter \
          notebook \
          pytest \
          black \
          flake8 \
          mypy \
          pylint \
          autopep8 \
          poetry \
          pipenv \
          virtualenv
      workingDir: /projects
      group:
        kind: build
        isDefault: false

  - id: setup-all
    composite:
      commands:
        - install-base-packages
        - install-nodejs
        - install-utility-tools
        - install-ai-cli-tools
        - clone-development-setup
        - setup-claude-files
        - install-python-tools
      parallel: false
      group:
        kind: build
        isDefault: true

  - id: dev-python
    exec:
      component: python-dev
      commandLine: python
      workingDir: /projects
      group:
        kind: run
        isDefault: true

events:
  postStart:
    - setup-all